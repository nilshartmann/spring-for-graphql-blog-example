scalar LocalDateTime

type Comment {
    id: ID!

    comment: String!
}

type Post {
    id: ID!


    title: String!
    body: String!
    date: LocalDateTime!
    summary(maxWords: Int! = 5): String!
    comments: [Comment!]!
}

type PostPage {
    posts: [Post!]!

    pageNo: Int!
    pageSize: Int!
    hasPrev: Boolean!
    hasNext: Boolean!
}

enum PostSortBy { title, date }
enum SortDirection { ASC, DESC }

type Query {
    posts(page: Int! = 0,
        pageSize: Int! = 5,
        sortBy: PostSortBy! = date,
        sortDirection: SortDirection! = DESC): PostPage!
    post(postId: ID!): Post
}

type AddPostError  {
    fieldName: String!
    errorMsg: String!
}

type AddPostSuccess {
    newPost: Post!
}

union AddPostResult = AddPostError | AddPostSuccess

input AddPostInput {
    title: String!
    body: String!
}

type Mutation {
    addPost(input: AddPostInput!): AddPostResult
}